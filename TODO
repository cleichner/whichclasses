Notes:
* Need to settle on how to do storage/indexing soon.
* Requirements:
** Primary source of truth is HTML files on disk. Parsed format should be
   regenerated on the fly at server start time.
** Ideally does indexing/searching. Don't want to reimplement.
** Data is highly relational. Relational DB is best.

* Need to parse TceClass page contents into meaningful data, including:
** Normalization of different questions
** Normalization of different answer ranges, thanks to 2011-12

* Need to think about serving architecture.
* Put together some simple request servlets so as to clarify end-to-end requests:
** All of the departments
** All of the courses in a department (with qualifiers)
** Details for a single course / class
* Add a LoggingHandlerWrapper for logging/tracing of requests. Make sure it
  does not block actual responses.

* TceClassModel:
* Add some simple calculation helpers for getting confidence interval and score

Bugs to resolve:
* Questions not parsed to enums
* Term strings not parsed to term codes (less important for now)
* Invalid pages (not logged in, load failures, etc.) shouldn't be saved/cached.
